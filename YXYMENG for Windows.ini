parsers: # array
  - reg: ^.*$
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 

    yaml:

      prepend-proxy-groups: # 建立策略组

        - name: ✈️ ‍起飞 
          type: select

        - name: ⚡ ‍低延迟
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300

        - name: 🎮 Steam
          type: fallback
          url: http://www.gstatic.com/generate_204
          interval: 150

        - name: 🌐 负载均衡
          type: load-balance
          url: http://www.gstatic.com/generate_204 
          interval: 300
          strategy: consistent-hashing

        - name: 🐟 漏网之鱼
          type: select
          proxies:
            - ✈️ ‍起飞
            - DIRECT

        - name: 💩 ‍广告
          type: select
          proxies:
            - REJECT
            - DIRECT
            - ✈️ ‍起飞 

      commands:
        - proxy-groups.✈️ ‍起飞.proxies=[]proxyNames|^[^游戏]*$
        - proxy-groups.⚡ ‍低延迟.proxies=[]proxyNames|^[^游戏]*$
        - proxy-groups.🌐 负载均衡.proxies=[]proxyNames|^[^游戏]*$
        - proxy-groups.🎮 Steam.proxies=[]proxyNames|tr|土耳其|TurKey|tk 

        - proxy-groups.✈️ ‍起飞.proxies.0+⚡ ‍低延迟   # 向指定分组第一个位置添加一个 ⚡ ‍低延迟 节点名
        - proxy-groups.✈️ ‍起飞.proxies.1+🌐 负载均衡 # 向指定分组第二个位置添加一个 🌐 负载均衡 节点名
        - proxy-groups.✈️ ‍起飞.proxies.2+DIRECT      # 向指定分组第三个位置添加一个 DIRECT 节点名

      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理

        - DOMAIN,clash.razord.top,DIRECT
        - DOMAIN,yacd.haishan.me,DIRECT
        - RULE-SET,applications,DIRECT
        - DOMAIN-KEYWORD,githubusercontent,✈️ ‍起飞
        - DOMAIN-KEYWORD,jsdelivr,✈️ ‍起飞

        - RULE-SET,MyProxies,✈️ ‍起飞
        - RULE-SET,MyDirect,DIRECT
        - DOMAIN-SUFFIX,cm.steampowered.com,🎮 Steam
        - PROCESS-NAME,steam.exe,🎮 Steam
        - PROCESS-NAME,steamwebhelper.exe,🎮 Steam
        - DOMAIN-KEYWORD,steam,🎮 Steam

        # 白名单
        - RULE-SET,UnBan,DIRECT
        # 广告
        - RULE-SET,BanAD,💩 ‍广告
        - RULE-SET,BanEasyListChina,💩 ‍广告
        - RULE-SET,BanProgramAD,💩 ‍广告

        # 游戏
        - RULE-SET,Epic,DIRECT
        - RULE-SET,Steam,🎮 Steam
        - RULE-SET,SteamCN,🎮 Steam
        - RULE-SET,Xbox,✈️ ‍起飞
        - RULE-SET,Nintendo,✈️ ‍起飞
        - RULE-SET,Origin,✈️ ‍起飞
        - RULE-SET,Sony,✈️ ‍起飞
        # 媒体
        - RULE-SET,ChinaMedia,DIRECT
        - RULE-SET,ProxyMedia,✈️ ‍起飞
        - RULE-SET,YouTube,✈️ ‍起飞
        # 开发
        - RULE-SET,Developer,✈️ ‍起飞
        # 18
        - RULE-SET,EHGallery,✈️ ‍起飞
        - RULE-SET,Porn,✈️ ‍起飞
        # 学术
        - RULE-SET,Scholar,✈️ ‍起飞
        # GFW
        - RULE-SET,ProxyGFWlist,✈️ ‍起飞
        # 国内
        - RULE-SET,ChinaCompanyIp,DIRECT
        - RULE-SET,ChinaDomain,DIRECT
        - RULE-SET,ChinaIp,DIRECT
        # 本地
        - RULE-SET,Download,DIRECT
        - RULE-SET,LocalAreaNetwork,DIRECT
        # 其他
        - RULE-SET,Adobe,✈️ ‍起飞
        - RULE-SET,Google,✈️ ‍起飞
        - RULE-SET,GoogleCN,DIRECT
        - RULE-SET,Microsoft,✈️ ‍起飞
        - RULE-SET,OneDrive,✈️ ‍起飞
        - RULE-SET,Telegram,✈️ ‍起飞

        - MATCH,🐟 漏网之鱼

      mix-rule-providers: 

        MyProxies:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/yxymeng/yxymeng.github.io/master/proxy_personal.yaml"
          path: ./ruleset/MyProxies.yaml
          interval: 86400

        MyDirect:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/yxymeng/yxymeng.github.io/master/direct_personal.yaml"
          path: ./ruleset/MyDirect.yaml
          interval: 86400

        BanAD: # 本碎片只包含常见广告关键字、广告联盟。无副作用，放心使用
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml"
          path: ./ruleset/BanAD.yaml
          interval: 86400
          
        BanProgramAD: # 本碎片只包含常见广告关键字、广告联盟。无副作用，放心使用
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml"
          path: ./ruleset/BanProgramAD.yaml
          interval: 86400

        Steam:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Steam.yaml"
          path: ./ruleset/Steam.yaml
          interval: 86400

        applications: # 需要直连的常见软件列表
          type: http
          behavior: classical
          url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"
          path: ./ruleset/applications.yaml
          interval: 86400

        Adobe:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Adobe.yaml"
          path: ./ACL4SSR/Adobe.yaml
          interval: 86400

        Developer:        # 内容：Developer 开发者常用国外网站、镜像和论坛
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Developer.yaml"
          path: ./ACL4SSR/Developer.yaml
          interval: 86400

        EHGallery:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/EHGallery.yaml"
          path: ./ACL4SSR/EHGallery.yaml
          interval: 86400

        Epic:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Epic.yaml"
          path: ./ACL4SSR/Epic.yaml
          interval: 86400
   
        Google:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Google.yaml"
          path: ./ACL4SSR/Google.yaml
          interval: 86400
      
        GoogleCN:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/GoogleCN.yaml"
          path: ./ACL4SSR/GoogleCN.yaml
          interval: 86400

        Microsoft:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Microsoft.yaml"
          path: ./ACL4SSR/Microsoft.yaml
          interval: 86400

        Nintendo:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Nintendo.yaml"
          path: ./ACL4SSR/Nintendo.yaml
          interval: 86400

        Origin:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Origin.yaml"
          path: ./ACL4SSR/Origin.yaml
          interval: 86400

        OneDrive:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/OneDrive.yaml"
          path: ./ACL4SSR/OneDrive.yaml
          interval: 86400
    
        Porn:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Porn.yaml"
          path: ./ACL4SSR/Porn.yaml
          interval: 86400
    
        Scholar:          # 国内外学术网站
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Scholar.yaml"
          path: ./ACL4SSR/Scholar.yaml
          interval: 86400
    
        Sony:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Sony.yaml"
          path: ./ACL4SSR/Sony.yaml
          interval: 86400

        SteamCN:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/SteamCN.yaml"
          path: ./ACL4SSR/SteamCN.yaml
          interval: 86400
    
        Telegram:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Telegram.yaml"
          path: ./ACL4SSR/Telegram.yaml
          interval: 86400

        Xbox:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Xbox.yaml"
          path: ./ACL4SSR/Xbox.yaml
          interval: 86400

        YouTube:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/YouTube.yaml"
          path: ./ACL4SSR/YouTube.yaml
          interval: 86400

        BanEasyListChina:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanEasyListChina.yaml"
          path: ./ACL4SSR/BanEasyListChina.yaml
          interval: 86400

        ChinaCompanyIp:
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaCompanyIp.yaml"
          path: ./ACL4SSR/ChinaCompanyIp.yaml
          interval: 86400
    
        ChinaDomain:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml"
          path: ./ACL4SSR/ChinaDomain.yaml
          interval: 86400
    
        ChinaIp:
          type: http
          behavior: ipcidr
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaIp.yaml"
          path: ./ACL4SSR/ChinaIp.yaml
          interval: 86400

        ChinaMedia:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaMedia.yaml"
          path: ./ACL4SSR/ChinaMedia.yaml
          interval: 86400
 
        Download:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Download.yaml"
          path: ./ACL4SSR/Download.yaml
          interval: 86400
           
        LocalAreaNetwork:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml"
          path: ./ACL4SSR/LocalAreaNetwork.yaml
          interval: 86400
    
        ProxyGFWlist:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyGFWlist.yaml"
          path: ./ACL4SSR/ProxyGFWlist.yaml
          interval: 86400

        ProxyMedia:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyMedia.yaml"
          path: ./ACL4SSR/ProxyMedia.yaml
          interval: 86400
    
        UnBan:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/UnBan.yaml"
          path: ./ACL4SSR/UnBan.yaml
          interval: 86400 
